ext {
    versions = declareVersions()
    libraries = declareLibraries()
}

private static Map<Object, Object> declareVersions() {
    def versions = [:]
    versions.spring_boot = "3.3.1"
    versions.spring_fw = "6.1.5"
    versions.lombok = "1.18.32"
    versions.commonslang3 = "3.14.0"
    versions.jakarta_inject = "2.0.1"
    versions.openapi = "7.5.0"
    versions.junitJupiter = "5.10.2"
    versions.junitPlatform = "1.10.2"
    versions.lombok = "1.18.32"
    versions.commons_io = "2.14.0"
    versions.jackson = "2.17.0"
    versions.google_guava = "33.1.0-jre"
    versions.swagger_annotations = "2.2.20"
    versions
}

private static Map<Object, Object> declareLibraries() {
    def versions = declareVersions()
    def libraries = [:]
    libraries.spring_boot_web = "org.springframework.boot:spring-boot-starter-web:$versions.spring_boot"
    libraries.spring_fw = [
            "org.springframework:spring-core:$versions.spring_fw",
            "org.springframework:spring-beans:$versions.spring_fw",
            "org.springframework:spring-expression:$versions.spring_fw",
            "org.springframework:spring-aop:$versions.spring_fw",
            "org.springframework:spring-tx:$versions.spring_fw",
            "org.springframework:spring-messaging:$versions.spring_fw",
            "org.springframework:spring-context:$versions.spring_fw",
            "org.springframework:spring-web:$versions.spring_fw",
            "org.springframework:spring-webmvc:$versions.spring_fw",
            "org.springframework:spring-oxm:$versions.spring_fw",
            "org.springframework:spring-context-support:$versions.spring_fw",
            "org.springframework:spring-jdbc:$versions.spring_fw",
            "org.springframework:spring-jcl:$versions.spring_fw",
            "org.springframework:spring-webflux:$versions.spring_fw"
    ]
    libraries.spring_boot_test = "org.springframework.boot:spring-boot-starter-test:$versions.spring_boot"
    libraries.lombok = "org.projectlombok:lombok:$versions.lombok"
    libraries.commonslang3 = "org.apache.commons:commons-lang3:$versions.commonslang3"
    libraries.jakarta_inject = "jakarta.inject:jakarta.inject-api:$versions.jakarta_inject"
    libraries.openapi = "org.openapitools:openapi-generator:$versions.openapi"
    libraries.junit_api = "org.junit.jupiter:junit-jupiter-api:$versions.junitJupiter"
    libraries.junit_engine = "org.junit.jupiter:junit-jupiter-engine:$versions.junitJupiter"
    libraries.junit_vintage = "org.junit.vintage:junit-vintage-engine:$versions.junitJupiter"
    libraries.junit_platform = "org.junit.platform:junit-platform-launcher:$versions.junitPlatform"
    libraries.lombok = "org.projectlombok:lombok:$versions.lombok"
    libraries.commons_io = "commons-io:commons-io:$versions.commons_io"
    libraries.jackson = [
            "com.fasterxml.jackson.core:jackson-annotations:$versions.jackson",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$versions.jackson",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-properties:$versions.jackson",
            "com.fasterxml.jackson.core:jackson-core:$versions.jackson",
            "com.fasterxml.jackson.core:jackson-databind:$versions.jackson",
            "com.fasterxml.jackson.datatype:jackson-datatype-joda:$versions.jackson",
    ]
    libraries.google_guava = "com.google.guava:guava:$versions.google_guava"
    libraries.swagger_annotations = "io.swagger.core.v3:swagger-annotations:$versions.swagger_annotations"
    libraries
}